apiVersion: v1
kind: Template
labels:
  template: zookeeper
metadata:
  annotations:
    description: Zookeeper Deployment and Runtime Components
    iconClass: icon-java
    tags: java,zookeeper
  name: zookeeper
objects:
- apiVersion: v1
  kind: ConfigMap
  metadata:
    labels:
      application: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  data:
    entrypoint.sh: |-
      #!/bin/bash
      
      ID=$(echo $POD_NAME | tr -d -c 0-9);
      export ZOOKEEPER_SERVER_ID=$((ID++));
      echo "ZOOKEEPER_SERVER_ID : "$ZOOKEEPER_SERVER_ID;
      for i in $(eval echo "{$NODES..1}"); do
        SRVID=((i--))
        SRV=$(echo $POD_NAME | sed "s/[0-9*]$/$SRVID/").$POD_SERVICE;
        ZOOKEEPER_SERVERS="$SRV:$ZOOKEEPER_SERVER_PORT:$ZOOKEEPER_ELECTION_PORT;$ZOOKEEPER_SERVERS";
      done;
      export ZOOKEEPER_SERVERS=$ZOOKEEPER_SERVERS;
      echo "ZOOKEEPER_SERVERS: " $ZOOKEEPER_SERVERS;
      
      /etc/confluent/docker/run;
      
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      application: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}-headless
  spec:
    clusterIP: None
    portalIP: None
    ports:
    - name: server
      port: 2888
      protocol: TCP
      targetPort: 2888
    - name: leader-election
      port: 3888
      protocol: TCP
      targetPort: 3888
    - name: client
      port: 2181
      protocol: TCP
      targetPort: 2181
    selector:
      application: ${APPLICATION_NAME}
    sessionAffinity: None
    type: ClusterIP
- apiVersion: apps/v1beta1
  kind: StatefulSet
  metadata:
    labels:
      application: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  spec:
    replicas: ${NODES}
    selector:
      matchLabels:
        application: ${APPLICATION_NAME}
    serviceName: ${APPLICATION_NAME}-headless
    template:
      metadata:
        creationTimestamp: null
        labels:
          application: ${APPLICATION_NAME}
      spec:
        containers:
        - name: ${APPLICATION_NAME}
          image: ${APPLICATION_IMAGE}
          imagePullPolicy: Always
          command:
          - /bin/entrypoint.sh
          env:
          - name: ZOOKEEPER_CLIENT_PORT
            value: "2181"
          - name: ZOOKEEPER_TICK_TIME
            value: "2000"
          - name: ZOOKEEPER_INIT_LIMIT
            value: "5"
          - name: ZOOKEEPER_SYNC_LIMIT
            value: "2"
          - name: ZOOKEEPER_SERVER_PORT
            value: "2888"
          - name: ZOOKEEPER_ELECTION_PORT
            value: "3888"
          - name: NODES
            value: ${NODES}
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_SERVICE
            value: ${APPLICATION_NAME}-headless
          ports:
          - containerPort: 2181
            name: client
            protocol: TCP
          - containerPort: 2888
            name: server
            protocol: TCP
          - containerPort: 3888
            name: leader-election
            protocol: TCP
          resources:
            requests:
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          volumeMounts:
          - mountPath: /bin/entrypoint.sh
            name: ${APPLICATION_NAME}-volume
            readOnly: true
          - mountPath: ${PERSISTENT_VOLUME_MOUNTPATH}
            name: datadir
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        terminationGracePeriodSeconds: 30
    volumes:
    - name: ${APPLICATION_NAME}-volume
      configMap:
        defaultMode: 0700
        name: ${APPLICATION_NAME}
    volumeClaimTemplates:
    - metadata:
        labels:
          application: ${APPLICATION_NAME}
        name: datadir
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: ${STORAGE_SIZE}
parameters:
- description: The name for the application.
  name: APPLICATION_NAME
  required: true
  value: confluent-zookeeper
- description: Zookeeper Image
  name: APPLICATION_IMAGE
  required: true
  value: confluentinc/cp-zookeeper:4.0.0
- description: Node count
  name: NODES
  required: true
  value: "3"
- description: Storage size
  name: STORAGE_SIZE
  required: true
  value: "1Gi"
- description: Storage size
  name: PERSISTENT_VOLUME_MOUNTPATH
  required: true
  value: "/var/lib/zookeeper"